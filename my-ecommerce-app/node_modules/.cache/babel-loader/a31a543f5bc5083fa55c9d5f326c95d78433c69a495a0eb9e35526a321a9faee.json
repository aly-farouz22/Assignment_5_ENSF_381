{"ast":null,"code":"var _jsxFileName = \"/Users/AFarouz/Desktop/Assignment_5_ENSF_381/my-ecommerce-app/src/components/ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Product from './Product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = ({\n  onAddToCart\n}) => {\n  _s();\n  const [products, setProducts] = useState([]); // State to hold products\n\n  useEffect(() => {\n    // Fetch products from your Flask API\n    fetch('http://localhost:3000/products') // Make sure the port matches your Flask app\n    .then(response => response.json()).then(data => setProducts(data)).catch(error => console.error('Error fetching products:', error));\n  }, []); // The empty array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list\",\n    children: products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n      product: product,\n      onAddToCart: onAddToCart\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","Product","jsxDEV","_jsxDEV","ProductList","onAddToCart","_s","products","setProducts","fetch","then","response","json","data","catch","error","console","className","children","map","product","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/AFarouz/Desktop/Assignment_5_ENSF_381/my-ecommerce-app/src/components/ProductList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Product from './Product';\n\nconst ProductList = ({ onAddToCart }) => {\n  const [products, setProducts] = useState([]); // State to hold products\n\n  useEffect(() => {\n    // Fetch products from your Flask API\n    fetch('http://localhost:3000/products') // Make sure the port matches your Flask app\n      .then(response => response.json())\n      .then(data => setProducts(data))\n      .catch(error => console.error('Error fetching products:', error));\n  }, []); // The empty array means this effect runs once on mount\n\n  return (\n    <div className=\"product-list\">\n      {products.map(product => (\n        <Product key={product.id} product={product} onAddToCart={onAddToCart} />\n      ))}\n    </div>\n  );\n};\n\nexport default ProductList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,gCAAgC,CAAC,CAAC;IAAA,CACrCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEZ,OAAA;IAAKc,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BX,QAAQ,CAACY,GAAG,CAACC,OAAO,iBACnBjB,OAAA,CAACF,OAAO;MAAkBmB,OAAO,EAAEA,OAAQ;MAACf,WAAW,EAAEA;IAAY,GAAvDe,OAAO,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+C,CACxE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CAlBIF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAoBjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}